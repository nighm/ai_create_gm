name: Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'src/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'src/**'
      - '.github/workflows/docs.yml'
  workflow_dispatch:  # 允许手动触发

jobs:
  docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        language: [zh, en]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Cache Poetry virtualenv
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: poetry install

    - name: Build documentation
      run: |
        cd docs/${{ matrix.language }}
        poetry run make html
      env:
        SPHINXOPTS: "-W --keep-going -n"

    - name: Upload documentation artifact
      uses: actions/upload-artifact@v3
      with:
        name: documentation-${{ matrix.language }}
        path: docs/${{ matrix.language }}/_build/html
        if-no-files-found: error

    - name: Deploy to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/${{ matrix.language }}/_build/html
        destination_dir: ${{ matrix.language }}
        keep_files: true
